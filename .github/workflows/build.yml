name: cargo build

on:
  push:
    tags:
      - '*'

permissions:
  contents: write

jobs:
  build:
    name: cargo build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            asset_name: git-utils-${{ github.ref_name }}-linux-x86_64.tar.gz
            arch: x86_64
          - os: ubuntu-latest
            asset_name: git-utils-${{ github.ref_name }}-linux-arm64.tar.gz
            arch: aarch64
            target: aarch64-unknown-linux-gnu
          - os: macos-latest
            asset_name: git-utils-${{ github.ref_name }}-darwin-x86_64.tar.gz
            arch: x86_64
          - os: macos-latest
            asset_name: git-utils-${{ github.ref_name }}-darwin-arm64.tar.gz
            arch: aarch64
            target: aarch64-apple-darwin
          - os: windows-latest
            asset_name: git-utils-${{ github.ref_name }}-windows-x86_64.zip

    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v3
        with:
          path: ~/.cargo
          key: ${{ matrix.os }}-${{ hashFiles('Cargo.lock') }}

      - name: Install Rust (linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          rustup update stable
          rustup default stable
          if [[ "${{ matrix.arch }}" == "aarch64" ]]; then
            rustup target add aarch64-unknown-linux-gnu
            sudo apt-get update
            sudo apt-get install -y gcc-aarch64-linux-gnu
          fi

      - name: Install Rust (macos)
        if: matrix.os == 'macos-latest'
        run: |
          curl https://sh.rustup.rs | sh -s -- -y
          echo "{:$HOME/.cargo/bin}" >> $GITHUB_PATH
          if [[ "${{ matrix.arch }}" == "aarch64" ]]; then
            rustup target add aarch64-apple-darwin
          fi

      - name: Install Rust (windows)
        if: matrix.os == 'windows-latest'
        run: |
          rustup update stable
          rustup default stable
          rustup toolchain install nightly

      - name: Build
        if: (matrix.os == 'ubuntu-latest' && matrix.arch == 'x86_64') || (matrix.os == 'macos-latest' && matrix.arch == 'x86_64')
        run: |
          cargo build --verbose --release
          strip target/release/git-default-branch
          strip target/release/git-current-branch
          strip target/release/git-repo-title
          strip target/release/git-repo-url
          strip target/release/git-sync
          tar -czvf ${{ matrix.asset_name }} -C target/release \
            git-current-branch \
            git-default-branch \
            git-repo-title \
            git-repo-url \
            git-sync

      - name: Build (linux-arm64)
        if: matrix.os == 'ubuntu-latest' && matrix.arch == 'aarch64'
        run: |
          # Configure cross-compilation
          echo '[target.aarch64-unknown-linux-gnu]' >> ~/.cargo/config
          echo 'linker = "aarch64-linux-gnu-gcc"' >> ~/.cargo/config
          
          cargo build --verbose --release --target ${{ matrix.target }}
          aarch64-linux-gnu-strip target/${{ matrix.target }}/release/git-default-branch
          aarch64-linux-gnu-strip target/${{ matrix.target }}/release/git-current-branch
          aarch64-linux-gnu-strip target/${{ matrix.target }}/release/git-repo-title
          aarch64-linux-gnu-strip target/${{ matrix.target }}/release/git-repo-url
          aarch64-linux-gnu-strip target/${{ matrix.target }}/release/git-sync
          tar -czvf ${{ matrix.asset_name }} -C target/${{ matrix.target }}/release \
            git-current-branch \
            git-default-branch \
            git-repo-title \
            git-repo-url \
            git-sync

      - name: Build (macos-arm64)
        if: matrix.os == 'macos-latest' && matrix.arch == 'aarch64'
        run: |
          cargo build --verbose --release --target ${{ matrix.target }}
          strip target/${{ matrix.target }}/release/git-default-branch
          strip target/${{ matrix.target }}/release/git-current-branch
          strip target/${{ matrix.target }}/release/git-repo-title
          strip target/${{ matrix.target }}/release/git-repo-url
          strip target/${{ matrix.target }}/release/git-sync
          tar -czvf ${{ matrix.asset_name }} -C target/${{ matrix.target }}/release \
            git-current-branch \
            git-default-branch \
            git-repo-title \
            git-repo-url \
            git-sync

      - name: Build (windows)
        if: matrix.os == 'windows-latest'
        run: |
          cargo +nightly install anonlink
          anonlink
          cargo +nightly build --verbose --release
          Compress-Archive -Path target/release/git-*.exe -Destination ${{ matrix.asset_name }}

      - name: Publish binaries
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.asset_name }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}
          overwrite: true
